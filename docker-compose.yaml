networks:
  kafka-elk-network:
    driver: bridge  # Define the bridge network

services:
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - kafka-elk-network  # Connect Kafka to the shared network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://10.0.2.15:9092,CONTROLLER://10.0.2.15:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9092:9092"
      - "9093:9093"  # Expose the Kafka ports

  logstash:
    image: logstash:8.16.2
    container_name: logstash
    networks:
      - kafka-elk-network  # Connect Logstash to the same shared network
    volumes:
      - ./logstash-config/logstash.yml:/usr/share/logstash/config/logstash.yml  # Mount custom config
      - ./logstash-config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro  # Mount your Logstash config
    environment:
      LOGSTASH_JAVA_OPTS: "-Xms256m -Xmx256m"  # Set Java options for Logstash

  elasticsearch:
    image: elasticsearch:8.16.2
    container_name: elasticsearch
    networks:
      - kafka-elk-network  # Connect Elasticsearch to the shared network
    environment:
      - discovery.type=single-node  # Single node setup for local use
      - bootstrap.memory_lock=true  # Prevent swapping
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # Set JVM options
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"  # Elasticsearch HTTP
      - "9300:9300"  # Elasticsearch transport
    volumes:
      - ./elasticsearch-config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml  # Mount the custom config
